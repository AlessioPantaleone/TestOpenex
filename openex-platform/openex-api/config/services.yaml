# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'
  cookie_secure: '%env(bool:COOKIE_SECURE)%'
  player_url: '%env(PLAYER_URL)%'
  admin_token: '%env(ADMIN_TOKEN)%'
  map_tile_server: '%env(MAP_TILE_SERVER)%'
  auth_local_enable: '%env(bool:AUTH_LOCAL_ENABLE)%'
  auth_openid_enable: '%env(bool:AUTH_OPENID_ENABLE)%'
  auth_openid_label: '%env(AUTH_OPENID_LABEL)%'
  auth_openid_provider: '%env(AUTH_OPENID_PROVIDER)%'
  auth_openid_client_id: '%env(AUTH_OPENID_CLIENT_ID)%'
  auth_openid_client_secret: '%env(AUTH_OPENID_CLIENT_SECRET)%'
  auth_kerberos_enable: '%env(bool:AUTH_KERBEROS_ENABLE)%'
  auth_is_default_admin: '%env(bool:AUTH_IS_DEFAULT_ADMIN)%'

services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  Drenso\OidcBundle\OidcClient:
    arguments:
      $wellKnownUrl: '%auth_openid_provider%'
      $clientId: '%auth_openid_client_id%'
      $clientSecret: '%auth_openid_client_secret%'
      $redirectRoute: connect_oidc_check

  mylogger.db:
    alias: logger
    public: true

  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,Form,Migrations,Resources,Kernel.php}'

  token_user_provider:
    class: App\Security\TokenUserProvider
    arguments: [ "@doctrine.orm.entity_manager" ]
    public: false

  token_authenticator:
    class: App\Security\TokenAuthenticator
    arguments: [ "@security.http_utils", "@doctrine.orm.entity_manager" ]
    public: false

  exercise_voter:
    class: App\Security\ExerciseVoter
    arguments: [ '@security.access.decision_manager' ]
    public: false
    tags:
      - { name: security.voter }

  group_voter:
    class: App\Security\GroupVoter
    arguments: [ '@security.access.decision_manager' ]
    public: false
    tags:
      - { name: security.voter }
