<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="openex-scheduler">
        <from uri="timer:simple?period=5s"/>
        <setHeader headerName="Authorization">
            <constant>{{openex.token}}</constant>
        </setHeader>
        <to uri="{{openex.inject_fetch}}"/>
        <unmarshal>
            <json library="Gson" unmarshalTypeName="java.lang.Object"/>
        </unmarshal>
        <split executorServiceRef="openex-worker-thread-profile" streaming="true">
            <simple>${body}</simple>
            <setHeader headerName="router-header">
                <simple>${body[context][type]}</simple>
            </setHeader>
            <!-- Inside property to navigate through all exchanges -->
            <setProperty propertyName="router-callback">
                <simple>${body[context][callback_url]}</simple>
            </setProperty>
            <!-- Send only data to workers -->
            <setBody>
                <simple>${body[data]}</simple>
            </setBody>
            <doTry>
                <dynamicRouter ignoreInvalidEndpoints="true">
                    <method ref="openexRouter" method="forward"/>
                </dynamicRouter>
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <log loggingLevel="ERROR" message="Error calling ${header.router-header} ${body}"/>
                    <setBody>
                        <simple>Technical error calling ${header.router-header}</simple>
                    </setBody>
                    <bean ref="openexCallback" method="error"/>
                </doCatch>
                <doFinally>
                    <to uri="direct:callback"/>
                </doFinally>
            </doTry>
        </split>
    </route>
    <route id="openex-callback">
        <from uri="direct:callback"/>
        <setHeader headerName="Content-Type">
            <constant>application/json</constant>
        </setHeader>
        <setHeader headerName="Authorization">
            <constant>{{openex.token}}</constant>
        </setHeader>
        <setHeader headerName="CamelHttpMethod">
            <constant>POST</constant>
        </setHeader>
        <doTry>
            <setHeader headerName="CamelHttpUri">
                <simple>${property.router-callback}</simple>
            </setHeader>
            <log message="Calling callback ${header.CamelHttpUri} ${body}"/>
            <to uri="http://fake"/>
            <doCatch>
                <exception>java.lang.Exception</exception>
                <log loggingLevel="ERROR" message="Error calling callback ${property.CamelExceptionCaught}"/>
            </doCatch>
        </doTry>
    </route>
</routes>
