version: 2.1

jobs:
  build_frontend:
    working_directory: ~/openex
    docker:
      - image: nikolaik/python-nodejs:python3.9-nodejs12
    steps:
      - run:
          command: apt-get update --allow-insecure-repositories --allow-unauthenticated && apt-get install -y build-essential
      - checkout
      - run: 
          working_directory: ~/openex/openex-front
          command: yarn install
      - run:
          working_directory: ~/openex/openex-front
          command: yarn build
          no_output_timeout: 30m
      - run: 
          working_directory: ~/
          command: cp -a openex openex_docker && cp -a openex openex_musl          
      - persist_to_workspace:
          root: ~/
          paths:
            - openex
            - openex_docker
            - openex_musl

  build_platform:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - run: 
          working_directory: ~/openex/openex-api
          command: mvn install -DskipTests
      - persist_to_workspace:
          root: ~/
          paths:
            - openex

  build_platform_musl:
    working_directory: ~/openex_musl
    docker:
      - image: maven:3.8.4-eclipse-temurin-17-alpine
    resource_class: medium+
    steps:
      - attach_workspace:
          at: ~/
      - run: 
          working_directory: ~/openex_musl/openex-api
          command: mvn install -DskipTests
      - persist_to_workspace:
          root: ~/
          paths:
            - openex_musl

  package_rolling:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run: git remote add openex ssh://git-9qdBths0@openex.io:/~/git-9qdBths0.git && git push --force openex master
      - run: mkdir release
      - run: cp -a ./openex-api/target/openex-api.jar release/openex/ && cp -a ./openex-api/src/main/resources/application.properties release/openex/
      - run:
          working_directory: ~/openex/release
          command: tar -zcvf "openex-$(date '+%Y%m%d').tar.gz" openex
      - run: 
          working_directory: ~/openex/release
          command: scp "openex-$(date '+%Y%m%d').tar.gz" git-9qdBths0@openex.io:/dns/io/openex/releases/

  package_rolling_musl:
    working_directory: ~/openex_musl
    docker:
      - image: maven:3.8.4-eclipse-temurin-17-alpine
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run: git remote add openex ssh://git-9qdBths0@openex.io:/~/git-9qdBths0.git && git push --force openex master
      - run: mkdir release
      - run: cp -a ./openex-api/target/openex-api.jar release/openex/ && cp -a ./openex-api/src/main/resources/application.properties release/openex/
      - run:
          working_directory: ~/openex_musl/release
          command: tar -zcvf "openex-$(date '+%Y%m%d')_musl.tar.gz" openex
      - run: 
          working_directory: ~/openex_musl/release
          command: scp "openex-$(date '+%Y%m%d')_musl.tar.gz" git-9qdBths0@openex.io:/dns/io/openex/releases/          

  deploy_demo:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-XZ1eb0O9@openex.io:/~/openex-XZ1eb0O9.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote 
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ~/openex/openex-api/target/openex-api.jar ./deploy/openex-api.jar
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_reference:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-Ak5byxnE@openex.io:/~/openex-Ak5byxnE.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ~/openex/openex-api/target/openex-api.jar ./deploy/openex-api.jar          
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_lab:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-V30PHgjf@openex.io:/~/openex-V30PHgjf.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ~/openex/openex-api/target/openex-api.jar ./deploy/openex-api.jar
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_testing:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-ar33Ej8o@openex.io:/~/openex-ar33Ej8o.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master
      - run: mv ~/openex/openex-api/target/openex-api.jar ./deploy/openex-api.jar
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  docker_build_platform:
    working_directory: ~/openex_docker
    machine:
      image: ubuntu-1604:202007-01
      resource_class: xlarge
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64"
            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"
            mkdir -p ~/.docker/cli-plugins
            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
            docker buildx create --name mybuilder --use
      - run:
          name: Login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Build Docker image openex/platform
          command: docker buildx build --platform $BUILDX_PLATFORMS -f Dockerfile_circleci -t openexhq/platform:latest -t openexhq/platform:${CIRCLE_TAG} --push .
          no_output_timeout: 30m

  docker_build_platform_rolling:
    working_directory: ~/openex_docker
    machine:
      image: ubuntu-1604:202007-01
      resource_class: xlarge
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64"
            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"
            mkdir -p ~/.docker/cli-plugins
            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
            docker buildx create --name mybuilder --use
      - run:
          name: Login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          working_directory: ~/openex_docker
          name: Build Docker image openex/platform
          command: docker buildx build --platform $BUILDX_PLATFORMS -f Dockerfile_circleci -t openexhq/platform:rolling --push .
          no_output_timeout: 30m

workflows:
  openex:
    jobs:
      - build_frontend:
          filters:
            tags:
              only: /.*/
      - build_platform:
          filters:
            tags:
              only: /.*/
          requires:
            - build_frontend
      - build_platform_musl:
          filters:
            tags:
              only: /.*/
          requires:
            - build_frontend
      - package_rolling:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - package_rolling_musl:
          requires:
            - build_platform_musl
          filters:
            branches:
              only:
                - master
      - deploy_demo:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - deploy_reference:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - deploy_lab:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - deploy_testing:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - docker_build_platform_rolling:
          requires:
            - build_frontend
          filters:
            branches:
              only:
                - master
      - docker_build_platform:
          requires:
            - build_frontend
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/