<routes xmlns="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <route id="openex-email">
        <from uri="direct:openex_email"/>
        <setHeader headerName="From">
            <simple>{{openex_email.sender}}</simple>
        </setHeader>
        <setHeader headerName="subject">
            <simple>${body[subject]}</simple>
        </setHeader>
        <setHeader headerName="encrypted">
            <simple>${body[encrypted]}</simple>
        </setHeader>
        <setHeader headerName="attachments">
            <simple>${body[attachments]}</simple>
        </setHeader>
        <!-- Handler specific header/footer -->
        <bean ref="email-headers-handler"/>
        <!-- Download attachments -->
        <bean ref="attachments-downloader"/>
        <!-- Prepare template -->
        <setHeader headerName="CamelFreemarkerTemplate">
            <simple>${body[body]}</simple>
        </setHeader>
        <choice>
            <when>
                <simple>${body[users].size} > 0</simple>
                <!-- Send a mail for each user (openexStrategy is mandatory) -->
                <split streaming="true" parallelProcessing="true" strategyRef="openexStrategy">
                    <simple>${body[users]}</simple>
                    <setHeader headerName="To">
                        <simple>${body[user_email]}</simple>
                    </setHeader>
                    <setHeader headerName="PgpKey">
                        <simple>${body[user_pgp_key]}</simple>
                    </setHeader>
                    <setHeader headerName="contentType">
                        <constant>text/html;charset=UTF-8</constant>
                    </setHeader>
                    <setHeader headerName="CamelCharsetName">
                        <constant>UTF-8</constant>
                    </setHeader>
                    <!-- Put the current user as the marker model -->
                    <setHeader headerName="CamelFreemarkerDataModel">
                        <simple>${body}</simple>
                    </setHeader>
                    <to uri="freemarker:from_header"/>
                    <!-- Encrypt the body and attachments with PGP if needed -->
                    <choice>
                        <when>
                            <simple>${header.encrypted} == true</simple>
                            <bean ref="pgp-encryption"/>
                        </when>
                    </choice>
                    <!-- Add attachments -->
                    <bean ref="attachments-handler"/>
                    <!-- Send the email -->
                    <removeHeaders pattern="attachments|PgpKey"/>
                    <doTry>
                        <to uri="{{openex_email.transport}}://{{openex_email.host}}?password={{openex_email.password}}&amp;username={{openex_email.user}}&amp;sslContextParameters=#ssl-handler"/>
                        <doCatch>
                            <exception>java.lang.Exception</exception>
                            <throwException exceptionType="java.lang.Exception"
                                            message="${header.To} error: ${exception.message}"/>
                        </doCatch>
                    </doTry>
                    <!-- Output message for callback -->
                    <setBody>
                        <simple>${header.To} success</simple>
                    </setBody>
                </split>
            </when>
            <otherwise>
                <!-- If no users, forge a success callback message -->
                <setBody>
                    <constant>Empty audience</constant>
                </setBody>
                <bean ref="openexCallback" method="success"/>
            </otherwise>
        </choice>
    </route>
</routes>
